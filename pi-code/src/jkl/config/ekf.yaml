### ekf config file ###
ekf_filter_node:
    ros__parameters:
        frequency: 20.0
        # sensor_timeout: 0.1 # This parameter can be thought of as the minimum frequency with which the filter will generate new output.
        two_d_mode: true
        # transform_time_offset: 0.0 # for future dating the transform
        # transform_timeout: 0.0 # how long the tf listener should wait for a transform to become available
        print_diagnostics: true # echo the /diagnostics_agg topic to see if the node is unhappy with any settings or data.
        debug: false # setting this to true will have strongly deleterious effects on the performance of the node
        # debug_out_file: /path/to/debug/file.txt
        # permit_corrected_publication: false # Whether we'll allow old measurements to cause a re-publication of the updated state
        # publish_acceleration: false # Whether to publish the acceleration state. Defaults to false if unspecified.
        publish_tf: true

        map_frame: map
        odom_frame: odom
        base_link_frame: base_link
        world_frame: odom


        #              [x_pos   , y_pos    , z_pos,
        #               roll    , pitch    , yaw,
        #               x_vel   , y_vel    , z_vel,
        #               roll_vel, pitch_vel, yaw_vel,
        #               x_accel , y_accel  , z_accel]
        odom0: /diff_cont/odom
        odom0_config: [false, false, false, # docs
                        false, false, false,
                        true, true, true,
                        false, false, true,
                        false, false, false]

        odom0_differential: false
        # odom0_relative: true
        # odom0_queue_size: 2
        # odom0_pose_rejection_threshold: 2.0
        # odom0_twist_rejection_threshold: 0.2
        # odom0_nodelay: false # This option tells the ROS subscriber to use the tcpNoDelay option, which disables Nagle's algorithm.

        #              [x_pos   , y_pos    , z_pos,
        #               roll    , pitch    , yaw,
        #               x_vel   , y_vel    , z_vel,
        #               roll_vel, pitch_vel, yaw_vel,
        #               x_accel , y_accel  , z_accel]
        imu0: /imu_broadcaster/imu
        imu0_config: [false, false, false,
                        false, false, true,
                        false, false, false,
                        false, false, true,
                        false, true, false] # X and Y accel are swapped on the IMU, so use these settings

        # imu0_nodelay: false
        imu0_differential: false
        imu0_relative: true
        # imu0_queue_size: 5
        # imu0_pose_rejection_threshold: 0.8
        # imu0_twist_rejection_threshold: 0.08
        # imu0_linear_acceleration_rejection_threshold: 0.2
        imu0_remove_gravitational_acceleration: true

        use_control: true # Whether or not we use the control input during prediction.
        stamped_control: true # Whether the input (assumed to be cmd_vel) is a geometry_msgs/Twist or geometry_msgs/TwistStamped message.
        control_timeout: 0.2
        control_config: [true, false, false, false, false, true] # Which velocities are being controlled. Order is vx, vy, vz, vroll, vpitch, vyaw.


        # acceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 3.4] # Places limits on how large the acceleration term will be. Should match your robot's kinematics.
        # deceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 4.5] # Acceleration and deceleration limits are not always the same for robots.
        # acceleration_gains: [0.8, 0.0, 0.0, 0.0, 0.0, 0.9] # If your robot cannot instantaneously reach its acceleration limit, the permitted change can be controlled with these gains
        # deceleration_gains: [1.0, 0.0, 0.0, 0.0, 0.0, 1.0] # If your robot cannot instantaneously reach its deceleration limit, the permitted change can be controlled with these gains

        # The better the omnidirectional motion model matches your system, the smaller these values can be.
        # The values are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az.
        process_noise_covariance: [0.05, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.05, 0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.06, 0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.03, 0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.03, 0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.06, 0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.025, 0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.025, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.04, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.01, 0.0,    0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.01, 0.0,    0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.02, 0.0,    0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.01, 0.0,    0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,
                                   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.015]


        # Setting a diagonal value (variance) to a large value will result in rapid convergence for initial measurements
        # The values are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az.
        initial_estimate_covariance: [1e-9, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    1e-9, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    1e-9, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    1e-9, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9, 0.0,     0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-9,  0.0,     0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     1e-9,  0.0,     0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     1e-9,  0.0,    0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     1e-9, 0.0,    0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    1e-9, 0.0,
                                      0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,     0.0,    0.0,    1e-9]

